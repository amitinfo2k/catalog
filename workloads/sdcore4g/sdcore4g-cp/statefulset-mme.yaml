---
# Source: omec-control-plane/templates/statefulset-mme.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mme
  namespace: default
  labels:
    release: sdcore4g
    app: mme
---
# Source: omec-control-plane/templates/statefulset-mme.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: mme
  namespace: default
  labels:
    release: sdcore4g
    app: mme
rules:
  - apiGroups:
      - ""
      - extensions
      - batch
      - apps
    verbs:
      - get
      - list
      - patch
    resources:
      - statefulsets
      - daemonsets
      - jobs
      - pods
      - services
      - endpoints
      - configmaps
---
# Source: omec-control-plane/templates/statefulset-mme.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: mme
  namespace: default
  labels:
    release: sdcore4g
    app: mme
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: mme
subjects:
  - kind: ServiceAccount
    name: mme
    namespace: default
---
# Source: omec-control-plane/templates/statefulset-mme.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mme
  labels:
    release: sdcore4g
    app: mme
spec:
  replicas: 1
  serviceName: mme-headless
  selector:
    matchLabels:
      release: sdcore4g
      app: mme
  template:
    metadata:
      labels:
        release: sdcore4g
        app: mme
      annotations:
        field.cattle.io/workloadMetrics: '[{"path":"/metrics","port":3081,"schema":"HTTP"}]'
        fluentbit.io/parser: mme
    spec:
      serviceAccountName: mme
      initContainers:
      - name: mme-load-sctp-module
        image: omecproject/busybox:stable
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          runAsUser: 0
        command: ["sh", "-xc"]
        args:
        - |
          if chroot /mnt/host-rootfs modinfo nf_conntrack_proto_sctp > /dev/null 2>&1; then \
              chroot /mnt/host-rootfs modprobe nf_conntrack_proto_sctp; \
          fi;
          chroot /mnt/host-rootfs modprobe tipc
        volumeMounts:
        - name: host-rootfs
          mountPath: /mnt/host-rootfs
      - name: mme-dep-check
        image: "quay.io/stackanetes/kubernetes-entrypoint:v0.3.1"
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          runAsUser: 0
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: PATH
            value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/
          - name: COMMAND
            value: "echo done"
          - name: DEPENDENCY_POD_JSON
            value: '[{"labels": {"app": "hss"}, "requireSameNode": false}]'
          # add dependency job for make_certs.sh
        command:
          - kubernetes-entrypoint
        volumeMounts:
          []
      - name: mme-init
        image: omecproject/nucleus:master-a8002eb
        imagePullPolicy: IfNotPresent
        command: ["/opt/mme/scripts/mme-init.sh"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: scripts
          mountPath: /opt/mme/scripts
        - name: configs
          mountPath: /opt/mme/config
        - name: shared-data
          mountPath: /opt/mme/config/shared
      - name: mme-coredump-init
        image: "omecproject/busybox:stable"
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          runAsUser: 0
        command: ["sh", "-xc"]
        args:
          - echo '/tmp/coredump/core.%h.%e.%t' > /mnt/host-rootfs/proc/sys/kernel/core_pattern
        volumeMounts:
          - name: host-rootfs
            mountPath: /mnt/host-rootfs
      containers:
      - name: mme-app
        image: omecproject/nucleus:master-a8002eb
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          runAsUser: 0
        command: ["bash", "-xc"]
        args:
        - /opt/mme/scripts/mme-run.sh mme-app
        resources:
          limits:
            cpu: 0.5
            memory: 1Gi
          requests:
            cpu: 0.5
            memory: 1Gi
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: MMERUNENV
          value: "container"
        volumeMounts:
        - name: scripts
          mountPath: /opt/mme/scripts
        - name: shared-data
          mountPath: /opt/mme/config/shared
        - name: shared-app
          mountPath: /tmp
        - name: configs
          mountPath: /opt/mme/config
        - name: coredump
          mountPath: /tmp/coredump
      - name: s1ap-app
        image: omecproject/nucleus:master-a8002eb
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          runAsUser: 0
        command: ["bash", "-xc"]
        args:
        - /opt/mme/scripts/mme-run.sh s1ap-app
        resources:
          limits:
            cpu: 0.5
            memory: 1Gi
          requests:
            cpu: 0.5
            memory: 1Gi
        env:
        - name: MMERUNENV
          value: "container"
        volumeMounts:
        - name: scripts
          mountPath: /opt/mme/scripts
        - name: shared-data
          mountPath: /opt/mme/config/shared
        - name: shared-app
          mountPath: /tmp
        - name: configs
          mountPath: /opt/mme/config
        - name: coredump
          mountPath: /tmp/coredump
      - name: s6a-app
        image: omecproject/nucleus:master-a8002eb
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          runAsUser: 0
        command: ["bash", "-xc"]
        args:
        - /opt/mme/scripts/mme-run.sh s6a-app
        resources:
          limits:
            cpu: 0.5
            memory: 1Gi
          requests:
            cpu: 0.5
            memory: 1Gi
        env:
        - name: MMERUNENV
          value: "container"
        volumeMounts:
        - name: scripts
          mountPath: /opt/mme/scripts
        - name: shared-data
          mountPath: /opt/mme/config/shared
        - name: shared-app
          mountPath: /tmp
        - name: coredump
          mountPath: /tmp/coredump
      - name: s11-app
        image: omecproject/nucleus:master-a8002eb
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
          runAsUser: 0
        command: ["bash", "-xc"]
        args:
        - /opt/mme/scripts/mme-run.sh s11-app
        resources:
          limits:
            cpu: 0.5
            memory: 1Gi
          requests:
            cpu: 0.5
            memory: 1Gi
        env:
        - name: MMERUNENV
          value: "container"
        volumeMounts:
        - name: scripts
          mountPath: /opt/mme/scripts
        - name: shared-data
          mountPath: /opt/mme/config/shared
        - name: shared-app
          mountPath: /tmp
        - name: coredump
          mountPath: /tmp/coredump
      volumes:
      - name: scripts
        configMap:
          name: mme-scripts
          defaultMode: 493
      - name: configs
        configMap:
          name: mme-configs
          defaultMode: 420
      - name: shared-data
        emptyDir: {}
      - name: shared-app
        emptyDir: {}
      - name: host-rootfs
        hostPath:
          path: /
      - name: coredump
        hostPath:
          path: /tmp/coredump
